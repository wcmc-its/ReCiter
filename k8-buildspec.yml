---
version: 0.2

env:
  secrets-manager:
    DOCKER_HUB_CREDENTIALS: $DOCKER_HUB_CREDENTIALS_ARN # Reference environment variable for the secret ARN
    
phases:
  install:
    runtime-versions:
      java: openjdk11
    commands:
      - kubectl version --short --client  
      - java -version 
  pre_build:
      commands:
        
        # Retrieve Docker credentials from Secrets Manager
        # Check the full secret to ensure the structure is correct
        - aws secretsmanager get-secret-value --secret-id $DOCKER_HUB_CREDENTIALS --query 'SecretString' --output text
        - export DOCKER_USERNAME=$(aws secretsmanager get-secret-value --secret-id $DOCKER_HUB_CREDENTIALS --query 'SecretString' --output text | jq -r .username)
        - export DOCKER_PASSWORD=$(aws secretsmanager get-secret-value --secret-id $DOCKER_HUB_CREDENTIALS --query 'SecretString' --output text | jq -r .password)
        # Debugging: Verify the values are being set correctly
        - echo "Docker username from secrets: $DOCKER_USERNAME"
        - echo "DOCKER_PASSWORD is set"

        # Check if the password is empty
          if [ -z "$DOCKER_PASSWORD" ]; then
          echo "Error: DOCKER_PASSWORD is empty"
          exit 1
          fi  
        - echo "Docker username from secrets: $DOCKER_USERNAME"
        - echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin
        - echo "Docker login successful"
        - TAG="$CODEBUILD_BUILD_NUMBER.$(date +%Y-%m-%d.%H.%M.%S).$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | head -c 8)"
        - echo $TAG
        - sed -i.bak -e 's@CONTAINER_IMAGE@'"$REPOSITORY_URI:$TAG"'@' kubernetes/k8-deployment.yaml
        - echo "${CODEBUILD_WEBHOOK_HEAD_REF}"
        - echo "${BRANCH}"
        - |
          if expr "${BRANCH}" : ".*dev" >/dev/null; then
            sed -i.bak -e 's@NAMESPACE@'"reciter"'@' -e 's@ENVCONFIG@'"env-config-dev"'@' -e 's@APPNAME@'"reciter-dev"'@' -e 's@HPANAME@'"hpa-reciter-dev"'@' -e 's@ENVIRONMENT_LABEL@'"dev"'@' kubernetes/k8-deployment.yaml;
          fi
        - |
          if expr "${BRANCH}" : ".*master" >/dev/null; then
            sed -i.bak -e 's@NAMESPACE@'"reciter"'@' -e 's@ENVCONFIG@'"env-config-prod"'@'  -e 's@APPNAME@'"reciter-prod"'@' -e 's@HPANAME@'"hpa-reciter-prod"'@' -e 's@ENVIRONMENT_LABEL@'"prod"'@' kubernetes/k8-deployment.yaml;
          fi
        - $(aws ecr get-login --no-include-email)
        - cat ./kubernetes/k8-deployment.yaml
  build:
    commands:
      - mvn clean install -Dmaven.test.skip=true
      - |
        if expr "${BRANCH}" : ".*master" >/dev/null || expr "${BRANCH}" : ".*dev" >/dev/null; then
          docker build --tag $REPOSITORY_URI:$TAG .
          docker push $REPOSITORY_URI:$TAG
          aws eks update-kubeconfig --name $EKS_CLUSTER_NAME --region us-east-1 --role-arn $EKS_KUBECTL_ROLE_ARN
        fi
        if expr "${BRANCH}" : ".*master" >/dev/null; then
          kubectl set image deployment/reciter-prod reciter=$REPOSITORY_URI:$TAG -n $EKS_CLUSTER_NAME
        fi
        if expr "${BRANCH}" : ".*dev" >/dev/null; then
          kubectl set image deployment/reciter-dev reciter=$REPOSITORY_URI:$TAG -n $EKS_CLUSTER_NAME
        fi
